name: Create Cloud Deploy Release
# uses: google-github-actions/create-cloud-deploy-release@v1.1.1
on: 
    push: 
      branches: 
        - main

env:
    PROJECT_ID: 'np-task-project'
    GAR_LOCATION: 'us-east5/np-task-project/cloud-run-source-deploy/task_project'
    REGION: 'us-east5'
    APP: 'task-project'

jobs:
    deploy:
      permissions:
        contents: 'read'
        id-token: 'write'
  
      # ...

      runs-on: ubuntu-latest
      steps:
        - name: 'Checkout'
          uses: 'actions/checkout@v3'
  
        - uses: 'google-github-actions/auth@v2'
          with:
            credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}' # Replace with the name of your GitHub Actions secret
  
        - name: 'Set up Cloud SDK'
          uses: 'google-github-actions/setup-gcloud@v1'
          with:
                project_id: 'np-task-project'
        
        # - uses: 'google-github-actions/deploy-cloudrun@v2'
        #   with:
        #       image: 'gcr.io/cloudrun/placeholder@sha256:855305a0a7f43545633c97483459bc2be018f2ec903d54447d1f5bbad1771ad7'
        #       service: 'task-project'
        - name: 'Docker auth'
          run: |-
                gcloud auth configure-docker us-east5-docker.pkg.dev
# try separating the build and push step here?
        - name: 'Build container'
          run: |-
                docker build -t "us-east5-docker.pkg.dev/${{ env.PROJECT_ID }}/testing-project/${{env.APP}}:${{ github.sha }}" ./
              
        - name: 'Push container'
          run: |-
                docker push "us-east5-docker.pkg.dev/${{ env.PROJECT_ID }}/testing-project/${{env.APP}}:${{ github.sha }}"
# us-east5-docker.pkg.dev/np-task-project/cloud-run-source-deploy/task_project/task-project
# us-east5-docker.pkg.dev/np-task-project/testing-project
        - name: 'Render templatised config manifests'
          run: |-
                export PROJECT_ID="${{ env.PROJECT_ID }}"
                export REGION="${{ env.REGION }}"
                for template in $(ls config/*.template.yaml); do envsubst < ${template} > ${template%%.*}.yaml ; done
        
        # - name: 'Create Cloud Deploy delivery pipeline'
        #   run: |-
        #         gcloud deploy apply --file config/clouddeploy.yaml --region ${{ env.GAR_LOCATION }}


        - name: 'Create release name'
          run: |-
                echo "RELEASE_NAME=${{ env.APP }}-${{github.sha}}-${{ github.event.release.name }}" >> ${{env.app}}
        
        - name: 'Create Cloud Deploy release'
          id: 'release'
          uses: 'google-github-actions/create-cloud-deploy-release@v0'
          with:
                  delivery_pipeline: '${{ env.APP }}'
                  name: '${{ env.RELEASE_NAME }}'
                  region: '${{ env.REGION }}'
                  description: '${{ env.GITHUB_COMMIT_MSG }}'
                  skaffold_file: 'config/skaffold.yaml'
                  images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}'
        
        - name: 'Report Cloud Deploy release'
          run: |-
                echo "Created release ${{ steps.release.outputs.name }} "
                echo "Release link ${{ steps.release.outputs.link }} "
        